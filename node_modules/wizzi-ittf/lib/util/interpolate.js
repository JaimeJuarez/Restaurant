var jsr = require('../esprima/jsrunner');
var Context = require('../esprima/jscontext').context;

function interpolate(template, data, opts) {
    if (typeof template === 'undefined' || template === null) return '';
    var regex,
        lDel,
        rDel,
        delLen,
        lDelLen,
        delimiter,
        // For escaping strings to go in regex
        regexEscape = /([$\^\\\/()|?+*\[\]{}.\-])/g;

    opts = opts || {};

    delimiter = opts.delimiter || '{}';
    delLen = delimiter.length;
    var delOdd = delLen % 2 == 0 ? 0 : 1;
    lDelLen = Math.ceil((delLen - delOdd) / 2 + delOdd);
    // escape delimiters for regex
    lDel = delimiter.substr(0, lDelLen).replace(regexEscape, "\\$1");
    rDel = delimiter.substr(lDelLen, delLen).replace(regexEscape, "\\$1") || lDel;

    // construct the new regex
    regex = new RegExp(lDel + "[^" + lDel + rDel + "]+" + rDel, "g");

    return template.replace(regex, function (placeholder) {
        var key = placeholder.slice(lDelLen, -lDelLen + delOdd);
        var ctx = new Context();
        ctx.setValues(data);

        // console.log('ip.start', 'var _____result = ' + key);
        jsr('var _____result = ' + key, ctx);
        // console.log('ip result', ctx.values._____result);
        return ctx.values._____result;
    });
}

module.exports = interpolate;


