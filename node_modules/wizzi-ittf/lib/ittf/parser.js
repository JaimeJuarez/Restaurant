var util = require('util');
var log = require("wizzi-core").log(module);

/*
    Parses lexed lines into a tree structure.

    ittf commands:
        $params // the params values are stored in the IttfModel

    line -> node : {
        + parent: Object, // parent ittf node
        + model: Object, // the IttfDocumentModel to which the line belongs
        + childs: Array, // the childrem ittf nodes
        indent: Number,
        name: String,
        value: String,
        row: Number,
        col: Number,
        tagSuffix: undefined || '('
    }
*/

module.exports = function (lines, ittfDocumentModel) {
    var nodes = [],
        root = null,
        current = null,
        line,
        i,
        l = lines.length;

    for (var i = 0; i < l; i++) {
        line = lines[i];
        line.model = ittfDocumentModel;
        if (line.indent == 0) {
            // root node
            line.parent = null;
            nodes.push(line);
        } else if (current == null) {
            throw new Error("Malformed tree, root node cannot have an indent. Filepath: " + ittfDocumentModel.filepath);
        } else if (line.indent == current.indent) {
            // sibling node
            if (typeof current.parent === 'undefined' || current.parent === null) {
                throw new Error("Malformed tree, only one root note allowed. Node " + line.name + ". Filepath: "
                    + ittfDocumentModel.filepath);
            }
            line.parent = current.parent;
            current.parent.childs.push(line);
        } else if (line.indent > current.indent) {
            // child node
            if (line.name === '$params') {
                // TODO Verify current.parent === null
                // current must be the root node of a mixin
                if (current.indent > 0) {
                    throw new Error("The $params node must be a child of the root node. Node " + line.name + ". Filepath: " + ittfDocumentModel.filepath);
                }
                current.model.$params = line.value;
                continue;
            } else {
                line.parent = current;
                current.childs.push(line);
            }
        } else if (line.indent < current.indent) {
            // child of ancestor node or root node
            var parent = current.parent;
            while (parent != null && line.indent < parent.indent)
                parent = parent.parent;
            line.parent = parent.parent;
            if (parent.parent) {
                parent.parent.childs.push(line);
            } else {
                throw new Error("Malformed tree, only one root note allowed. Node " + line.name + ". Filepath: "
                    + ittfDocumentModel.filepath);
                //VIA nodes.push(line);
            }
        }
        current = line;
        current.childs = [];
    }
    return nodes;
};

