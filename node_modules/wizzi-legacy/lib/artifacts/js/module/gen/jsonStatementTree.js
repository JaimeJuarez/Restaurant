var util = require('util');
var verify = require('wizzi-core').verify;
var jsschema = require('../../../../wizzi/models/js-model.g');

var md = module.exports = {};

md.getStatements = function(model)
{
    var ret = [];
    var json = JSON.parse(model.WmtName);
    if (verify.isArray(json)) {
        json.forEach(function (jsonitem) {
            ret.push(normalizeJSTNode(jsonitem, model.WmtParent));
        });
        utilnode.replace(item, normalized);
    } else {
        ret.push(
            normalizeJSTNode(json, model.WmtParent)
        );
    }
    // console.log('jsonStatementTree.getStatements', util.inspect(ret, { depth: 2 }));
    return ret;
}

function normalizeJSTNode(node, parent) {
    node.WmtParent = parent;
    node.WmtTag = node.n;
    if (jsschema.__tagEntityMapping[node.n]) {
        node.WmtEntity = jsschema.__tagEntityMapping[node.n];
    } else {
        node.WmtEntity = node.n;
    }
    node.WmtName = node.v;
    node.statements = []
    if (node.childs) {
        node.childs.forEach(function (item) {
            node.statements.push(normalizeJSTNode(item, node));
        });
    }
    return node;
}
