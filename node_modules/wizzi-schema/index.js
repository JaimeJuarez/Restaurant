// generator: wizzi-lab-artifatcs/lib/js/module/gen/main.js, utc time: Thu, 22 Oct 2015 19:39:40 GMT
var util = require('util');
var path = require('path');
var stringify = require('json-stringify-safe');
var GenWriter = require('wizzi-core').GenWriter;
var StringWriter = require('wizzi-core').stringwriter;
var log = require('wizzi-core').log(module);
var options = require('wizzi-core').options;
var file = require('wizzi-core').file;
var ittf = require('wizzi-ittf');
var legacy = require('wizzi-legacy');
var WizziSchema = require('./lib/wizzi/models/bootstrap/wizzischema-model').WizziSchema;
var md = module.exports = {};

md.getLegacyArtifactGenerator = function(artifactName) {
    return legacy.getArtifactGenerator(artifactName);
};
// async load a WizziModel of type 'wizzischema' from an IttfDocument

md.wizzischema = function(ittfDocumentPath, context, callback) {
    var loader = md.getWizziModelLoader('wizzischema');
    loader.load(ittfDocumentPath, context, function(err, wizziModel) {
        if (err) {
            return callback(err, null);
        }
        callback(null, wizziModel);
    });
};
// async generate the bootstrap WizziModel and WizziModelLoader of type 'wizzischema'
// and persist them in the lib/wizzi/models folder of this module (wizzi-schema)

md.generateBootstrapWizzischema = function(callback) {
    var wizzischemaBootModel = require('./lib/wizzi/models/bootstrap/wizzischema-boot-modelinstance');
    var wizzimodelsFolder = path.resolve(__dirname, 'lib', 'wizzi', 'models');
    var outModelPath = path.join(wizzimodelsFolder, 'wizzischema-model.g.js');
    var outLoaderPath = path.join(wizzimodelsFolder, 'wizzischema-loader.g.js');
    var wizzischemaBootModelInstance = wizzischemaBootModel.createInstance();
    // execute the artifact generator 'wizzischema/model'
    md.doArtifactGeneration(wizzischemaBootModelInstance, '/lib/wizzimodels/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/model', {}, function(err, artifact) {
        if (err) {
            throw new Error('Error generating the bootstrap WizziModel of type wizzischema: ' + util.inspect(err));
        }
        file.write(outModelPath, artifact);
        // execute the artifact generator 'wizzischema/loader'
        md.doArtifactGeneration(wizzischemaBootModelInstance, '/lib/wizzimodels/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/loader', {}, function(err, artifact) {
            if (err) {
                throw new Error('Error generating the bootstrap WizziModelLoader of type wizzischema: ' + util.inspect(err));
            }
            file.write(outLoaderPath, artifact);
            if (typeof callback === 'function') {
                callback(null);
            }
        });
    });
};

md.ittf = function(filepath, context, callback) {
    ittf.loadModel(filepath, context, function(err, ittfModel) {
        var ittfmodel = ittfModel.nodes[0];
        // log 'md.ittf.filepath', filepath, ittfmodel
        callback(null, ittfmodel);
    });
};

md.ittfFromString = function(content, context, callback) {
    ittf.loadModelFromString(content, context, function(err, ittfModel) {
        var ittfmodel = ittfModel.nodes[0];
        // log 'md.ittf.filepath', filepath, ittfmodel
        callback(null, ittfmodel);
    });
};
var artifactGenerators = {};
// async execute an artifact generation
// the context parameter may contain a __data property that is
// set on the genWriter options.data property

md.doArtifactGeneration = function doArtifactGeneration(wizziModelInstance, sourceFilepathInfo, generationPath, context, callback) {
    var genWriter = new GenWriter({ options: options(null, { data: context.__data }) });
    var generator = md.getArtifactGenerator(generationPath);
    try {
        new generator.gen(wizziModelInstance, genWriter);
    } catch (ex) {
        ex.message = 'doArtifactGeneration exception. In file ' + sourceFilepathInfo + '.\n' + ex.message;
        throw ex;
    }
    var sw = new StringWriter();
    genWriter.toStream(sw);
    callback(null, sw.toString());
};
// retrieve an ArtifactGenerator by its name

md.getArtifactGenerator = function(generationPath) {
    var generator = artifactGenerators[generationPath];
    if (!generator) {
        var modulePath = path.resolve(__dirname, './lib/artifacts/' + generationPath + '/gen/main.js');
        if (file.exists(modulePath)) {
            generator = artifactGenerators[generationPath] = require('./lib/artifacts/' + generationPath + '/gen/main');
        }
        else {
            log.warn('module path do not exists: ' + modulePath);
        }
    }
    return generator;
};
var wizziModelLoaders = {};
var wizziSchemaObjects = {};
// retrieve a WizziModelLoader by its wizzischema name

md.getWizziModelLoader = function(schemaName) {
    if (wizziModelLoaders[schemaName]) {
        return wizziModelLoaders[schemaName];
    }
    else {
        var modulePath = path.resolve(__dirname, './lib/wizzi/models/' + schemaName + '-loader.g.js');
        if (file.exists(modulePath)) {
            var ret = require('./lib/wizzi/models/' + schemaName + '-loader.g');
            wizziModelLoaders[schemaName] = ret;
            return ret;
        }
        else {
            log.warn('Wizzi model loader module path do not exists: ' + modulePath);
            return null;
        }
    }
};
// retrieve a WizziSchemaObject object from its JSON representation

md.getWizziSchemaObject = function(schemaName) {
    if (wizziSchemaObjects[schemaName]) {
        return wizziSchemaObjects[schemaName];
    }
    else {
        var modulePath = path.resolve(__dirname, './lib/wizzi/models/' + schemaName + '-schema.g.json');
        if (file.exists(modulePath)) {
            var ret = require('./lib/wizzi/models/' + schemaName + '-schema.g.json');
            wizziSchemaObjects[schemaName] = ret;
            return ret;
        }
        else {
            log.warn('Wizzi schema object module path do not exists: ' + modulePath);
            return null;
        }
    }
};
var modelTransformers = {};
// async execute a model transformation

md.doModelTransformation = function(model, transformationName, context, callback) {
    var transformer = md.getModelTransformer(transformationName);
    if (transformer == null) {
        throw new Error('doModelTransformation. Cannot find transformer ' + transformationName);
    }
    else {
        new transformer.trans(model, context, callback);
    }
};
// retrieve a ModelTransformer by its name

md.getModelTransformer = function(transformerName) {
    if (modelTransformers[transformerName]) {
        return modelTransformers[transformerName];
    }
    else {
        var modulePath = path.resolve(__dirname, './lib/artifacts/' + transformerName + '/trans/main.js');
        if (file.exists(modulePath)) {
            var ret = require('./lib/artifacts/' + transformerName + '/trans/main');
            modelTransformers[transformerName] = ret;
            return ret;
        }
        else {
            log.warn('Transformer module path do not exists: ' + modulePath);
            return null;
        }
    }
};
// async generate a Wizzi model and a Wizzi model loader
// from an Ittf document of schema @wizzischema@

md.executeSchemaGenerationProcess = function(schemaIttfDocumentPath, modelPath, loaderPath, testPath, jsondocsPath, htmldocsPath, context, callback) {
    md.generateWizzischemaModelAndLoader(schemaIttfDocumentPath, context || {}, function(err, wizziModelAndLoaderArtifact) {
        if (err) {
            throw new Error('Wizzi-schema.index.executeSchemaGenerationProcess: ' + util.inspect(err));
        }
        file.write(modelPath, wizziModelAndLoaderArtifact[0]);
        file.write(loaderPath, wizziModelAndLoaderArtifact[1]);
        file.write(testPath, wizziModelAndLoaderArtifact[2]);
        file.write(jsondocsPath, wizziModelAndLoaderArtifact[3]);
        file.write(htmldocsPath, wizziModelAndLoaderArtifact[4]);
        callback(null, null);
    });
};
// async generate a Wizzi model and a Wizzi model loader
// from an Ittf document of schema @wizzischema@

md.generateWizzischemaModelAndLoader = function(schemaIttfDocumentPath, context, callback) {
    // async load the WizziModel from schemaIttfDocumentPath
    log.info('starting async load the WizziModel from schemaIttfDocumentPath');
    md.wizzischema(schemaIttfDocumentPath, context, function(err, wizziModelTemp) {
        log.info('async load the WizziModel. err', err);
        if (err) {
            return callback(err);
        }
        // load the wizziModelTemp instance into the bootstrap wizzimodel.
        // This is required until the generation of the WizziModel of type 'wizzischema'
        // is not completely automated.
        var bootWizziModel = new WizziSchema(wizziModelTemp.wzName);
        bootWizziModel.loadFromWizziModel(wizziModelTemp);
        log.info('starting the artifact generator wizzischema/model');
        // execute the artifact generator 'wizzischema/model'
        md.doArtifactGeneration(bootWizziModel, '/lib/wizzi/models/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/model', context, function(err, wizziModelArtifact) {
            if (err) {
                return callback(err);
            }
            log.info('starting the artifact generator wizzischema/loader');
            // execute the artifact generator 'wizzischema/loader'
            md.doArtifactGeneration(bootWizziModel, '/lib/wizzi/models/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/loader', context, function(err, wizziLoaderArtifact) {
                if (err) {
                    return callback(err);
                }
                log.info('starting the artifact generator wizzischema/test');
                // execute the artifact generator 'wizzischema/test'
                md.doArtifactGeneration(bootWizziModel, '/lib/wizzi/models/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/test', context, function(err, wizziTestArtifact) {
                    if (err) {
                        return callback(err);
                    }
                    md.doModelTransformation(bootWizziModel, 'wizzischema/json_docs', context, function(err, wizziDocsObject) {
                        if (err) {
                            return callback(err);
                        }
                        var docsJson = stringify(wizziDocsObject, null, 2);
                        md.doArtifactGeneration(wizziDocsObject, '/lib/wizzi/models/bootstrap/wizzischema-boot-modelinstance', 'wizzischema/html_docs', context, function(err, wizziHtmlDocsArtifact) {
                            if (err) {
                                return callback(err);
                            }
                            callback(null, [
                                wizziModelArtifact, 
                                wizziLoaderArtifact, 
                                wizziTestArtifact, 
                                docsJson, 
                                wizziHtmlDocsArtifact
                            ]);
                        });
                    });
                });
            });
        });
    });
};
