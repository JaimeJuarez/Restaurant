var statement = require('./statement');
var method = require('./method');

var clazz = module.exports = {};
var myname = 'js.module.clazz';

clazz.gen = function (model, ctx) {
    //console.log(myname + '.gen.model', model);
    var ctor = model.jsctor();
    var baseargs = ctor == null ? '' : (ctor.baseargs() || '');
    // console.log('baseargs', baseargs);
    ctx.a('c_name', model.WmtName);
    ctx.a('c_args', ctor == null ? '' : ctor.jsargs());
    ctx.a('super_args', baseargs.length > 0 ? ', ' + baseargs : '');
    ctx.w('/*');
    ctx.w('    {c_name} class');
    model.statements.forEach(function (item) {
        if (item.WmtEntity === 'comment') {
            ctx.w('    ' + item.WmtName);
        }
    });
    ctx.w('*/');
    ctx.w('{c_name} = function({c_args}) {');
    if (model.super) {
        ctx.a('c_super', model.super);
        ctx.w('    {c_super}.call(this{super_args});');
    }
    if (ctor) {
        ctx.indent();
        ctor.statements.forEach(function (item) {
            statement.gen(item, ctx);
        });
        ctx.deindent();
    }
    ctx.w('}');
    if (model.super) {
        ctx.w('util.inherits({c_name}, {c_super});');
        ctx.w('');
    }
    model.members.forEach(function (item) {
        if (item.WmtEntity === 'method') {
            new method.gen(item, ctx);
        } else if (item.WmtEntity === 'ctor') {
            ; // done already
        } else {
            throw ctx.error(myname + '.gen. Member entity not implemented: ' + item.WmtEntity);
        }
    });
}