var expect = require('expect.js')
var ModelInfo = require('../../lib/model/modelinfo');

var modelConfig_A = {
    src: __dirname + '/data/f0.html.ittf'
    , contexts: [
        { src: __dirname + '/data/folder/f1.html.ittf' }
    ]
};

var modelConfig_B = {
    src: __dirname + '/data/folder'
};

var modelConfig_C = {
    src: __dirname + '/data/f0.html.ittf'
    , contexts: [
        {
            src: __dirname + '/data/folder/f1.html.ittf'
            , coll: {
                name: 'alpha'
            }
        }
    ]
};

var modelInfo;

describe("modelInfo A", function () {
    before(function () {
        modelInfo = new ModelInfo(modelConfig_A);
    });
    it("should exist", function () {
        expect(modelInfo.exists()).to.be(true);
    });
    it("and should not be a directory", function () {
        expect(modelInfo.isDirectory()).to.be(false);
    });
    it("should have a context", function () {
        expect(modelInfo.hasContext()).to.be(true);
    });
    it("but context collection is null", function () {
        expect(modelInfo.getContextCollection()).to.be(null);
    });
});

describe("modelInfo B", function () {
    before(function () {
        modelInfo = new ModelInfo(modelConfig_B);
    });
    it("should exists", function () {
        expect(modelInfo.exists()).to.be(true);
    });
    it("and should be a directory", function () {
        expect(modelInfo.isDirectory()).to.be(true);
    });
});

describe("modelInfo C", function () {
    before(function () {
        modelInfo = new ModelInfo(modelConfig_C);
    });
    it("should exists", function () {
        expect(modelInfo.exists()).to.be(true);
    });
    it("should not be a directory", function () {
        expect(modelInfo.isDirectory()).to.be(false);
    });
    it("should have a context", function () {
        expect(modelInfo.hasContext()).to.be(true);
    });
    it("and context collection exists and its name is alpha", function () {
        expect(modelInfo.getContextCollection().name).to.be('alpha');
    });
});

