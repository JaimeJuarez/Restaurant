var util = require('util');
var verify = require('wizzi-core').verify;
var lineparser = require('wizzi-core').lineparser;

var myname = 'js.module.test';
var md = module.exports = {};

md.load_tests = function (me) {

    me.stm.describe = function (model, ctx) {
        ctx.w('describe("' + verify.escapename(model.WmtName) + '", function() {');
        me.genItems(model.statements, ctx, { indent: true });
        ctx.w('});');
    }
    me.stm.it = function (model, ctx) {
        ctx.w('it("' + verify.escapename(model.WmtName) + '", function() {');
        me.genItems(model.statements, ctx, { indent: true });
        ctx.w('});');
    }
    me.stm.itAsync = function (model, ctx) {
        ctx.w('it("' + verify.escapename(model.WmtName) + '", function(done) {');
        me.genItems(model.statements, ctx, { indent: true });
        ctx.w('});');
    }
    me.stm.before = function (model, ctx) {
        embedFunction('before', ctx, model.statements, me);
    }
    me.stm.beforeAsync = function (model, ctx) {
        embedFunctionAsync('before', ctx, model.statements, me);
    }
    me.stm.beforeEach = function (model, ctx) {
        embedFunction('beforeEach', ctx, model.statements, me);
    }
    me.stm.after = function (model, ctx) {
        embedFunction('after', ctx, model.statements, me);
    }
    me.stm.afterAsync = function (model, ctx) {
        embedFunctionAsync('after', ctx, model.statements, me);
    }
    me.stm.afterEach = function (model, ctx) {
        embedFunction('afterEach', ctx, model.statements, me);
    }

}

function embedFunction(name, ctx, items, me) {
    ctx.w(name + '(function() {');
    me.genItems(items, ctx);
    ctx.w('});');
}
function embedFunctionAsync(name, ctx, items, me) {
    ctx.w(name + '(function(done) {');
    me.genItems(items, ctx);
    ctx.w('});');
}